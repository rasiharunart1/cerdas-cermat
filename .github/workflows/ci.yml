name: CI - Documentation and Lint Check

# Trigger on all pull requests
on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'legacy-quiz/**'

# Environment variables
env:
  # Disable network-dependent operations
  COMPOSER_NO_DEV: true
  NPM_CONFIG_OFFLINE: true

jobs:
  docs-lint:
    name: Documentation and Basic Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check repository structure
      run: |
        echo "‚úÖ Checking repository structure..."
        ls -la
        
        echo "‚úÖ Verifying required files exist..."
        test -f README.md && echo "‚úì README.md found" || echo "‚úó README.md missing"
        test -f CONTRIBUTING.md && echo "‚úì CONTRIBUTING.md found" || echo "‚úó CONTRIBUTING.md missing"
        test -f ROADMAP.md && echo "‚úì ROADMAP.md found" || echo "‚úó ROADMAP.md missing"
        test -f .gitignore && echo "‚úì .gitignore found" || echo "‚úó .gitignore missing"
        test -f PULL_REQUEST_TEMPLATE.md && echo "‚úì PR template found" || echo "‚úó PR template missing"
        
        echo "‚úÖ Verifying legacy quiz preservation..."
        test -d legacy-quiz && echo "‚úì legacy-quiz/ directory found" || echo "‚úó legacy-quiz/ directory missing"
        test -f legacy-quiz/README.md && echo "‚úì legacy-quiz/README.md found" || echo "‚úó legacy-quiz/README.md missing"
        
        echo "‚úÖ Verifying GitHub templates..."
        test -d .github/ISSUE_TEMPLATE && echo "‚úì Issue templates directory found" || echo "‚úó Issue templates directory missing"
        test -f .github/ISSUE_TEMPLATE/bug_report.md && echo "‚úì Bug report template found" || echo "‚úó Bug report template missing"
        test -f .github/ISSUE_TEMPLATE/feature_request.md && echo "‚úì Feature request template found" || echo "‚úó Feature request template missing"
        
    - name: Basic markdown validation
      run: |
        echo "‚úÖ Performing basic markdown validation..."
        
        # Check for common markdown issues without requiring external tools
        find . -name "*.md" -not -path "./legacy-quiz/*" -exec echo "Checking: {}" \;
        
        # Simple validation: check for basic markdown structure
        find . -name "*.md" -not -path "./legacy-quiz/*" -exec bash -c '
          file="$1"
          echo "Validating $file..."
          
          # Check if file is not empty
          if [ ! -s "$file" ]; then
            echo "‚ö†Ô∏è  Warning: $file is empty"
          else
            echo "‚úì $file has content"
          fi
          
          # Check for basic markdown headers
          if grep -q "^# " "$file"; then
            echo "‚úì $file has H1 headers"
          else
            echo "‚ö†Ô∏è  Warning: $file missing H1 headers"
          fi
          
        ' _ {} \;
        
    - name: Verify no composer/npm dependency files in root
      run: |
        echo "‚úÖ Ensuring no premature dependency files..."
        
        # These files should not exist yet in this phase
        if [ -f composer.json ]; then
          echo "‚ö†Ô∏è  Warning: composer.json found - this should be added in later PR"
        else
          echo "‚úì No composer.json (correct for this phase)"
        fi
        
        if [ -f package.json ]; then
          echo "‚ö†Ô∏è  Warning: package.json found - this should be added in later PR"
        else
          echo "‚úì No package.json (correct for this phase)"
        fi
        
        if [ -d vendor ]; then
          echo "‚ùå Error: vendor/ directory found - dependencies should not be installed"
          exit 1
        else
          echo "‚úì No vendor/ directory"
        fi
        
        if [ -d node_modules ]; then
          echo "‚ùå Error: node_modules/ directory found - dependencies should not be installed"
          exit 1
        else
          echo "‚úì No node_modules/ directory"
        fi
        
    - name: Check .gitignore coverage
      run: |
        echo "‚úÖ Verifying .gitignore includes required patterns..."
        
        # Check for essential Laravel patterns
        grep -q "vendor/" .gitignore && echo "‚úì vendor/ ignored" || echo "‚ö†Ô∏è  vendor/ not in .gitignore"
        grep -q "node_modules/" .gitignore && echo "‚úì node_modules/ ignored" || echo "‚ö†Ô∏è  node_modules/ not in .gitignore"
        grep -q ".env" .gitignore && echo "‚úì .env files ignored" || echo "‚ö†Ô∏è  .env files not in .gitignore"
        grep -q "storage.*cache" .gitignore && echo "‚úì storage cache ignored" || echo "‚ö†Ô∏è  storage cache not in .gitignore"
        
    - name: Documentation completeness check
      run: |
        echo "‚úÖ Checking documentation completeness..."
        
        # Check main README has required sections
        grep -q -i "laravel" README.md && echo "‚úì README mentions Laravel" || echo "‚ö†Ô∏è  README missing Laravel reference"
        grep -q -i "livewire" README.md && echo "‚úì README mentions Livewire" || echo "‚ö†Ô∏è  README missing Livewire reference"
        grep -q -i "filament" README.md && echo "‚úì README mentions Filament" || echo "‚ö†Ô∏è  README missing Filament reference"
        grep -q -i "pusher" README.md && echo "‚úì README mentions Pusher" || echo "‚ö†Ô∏è  README missing Pusher reference"
        grep -q -i "roadmap\|peta jalan" README.md && echo "‚úì README has roadmap section" || echo "‚ö†Ô∏è  README missing roadmap section"
        
        # Check CONTRIBUTING has required sections
        grep -q -i "branch" CONTRIBUTING.md && echo "‚úì CONTRIBUTING mentions branching" || echo "‚ö†Ô∏è  CONTRIBUTING missing branch strategy"
        grep -q -i "commit" CONTRIBUTING.md && echo "‚úì CONTRIBUTING mentions commits" || echo "‚ö†Ô∏è  CONTRIBUTING missing commit guidelines"
        
    - name: Legacy quiz validation
      run: |
        echo "‚úÖ Validating legacy quiz preservation..."
        
        cd legacy-quiz
        
        # Check required files exist
        test -f index.html && echo "‚úì index.html preserved" || echo "‚ùå index.html missing"
        test -f script.js && echo "‚úì script.js preserved" || echo "‚ùå script.js missing"
        test -f style.css && echo "‚úì style.css preserved" || echo "‚ùå style.css missing"
        
        # Basic file integrity check
        if [ -f index.html ]; then
          grep -q "Cerdas Cermat" index.html && echo "‚úì HTML content intact" || echo "‚ö†Ô∏è  HTML content may be damaged"
        fi
        
        if [ -f script.js ]; then
          grep -q "questionData" script.js && echo "‚úì JavaScript content intact" || echo "‚ö†Ô∏è  JavaScript content may be damaged"
        fi
        
        if [ -f style.css ]; then
          grep -q "container" style.css && echo "‚úì CSS content intact" || echo "‚ö†Ô∏è  CSS content may be damaged"
        fi
        
    - name: Final validation summary
      run: |
        echo "üéâ CI Validation Complete!"
        echo ""
        echo "‚úÖ Repository structure verified"
        echo "‚úÖ Documentation validated"
        echo "‚úÖ Legacy quiz preserved"
        echo "‚úÖ GitHub templates created"
        echo "‚úÖ No premature dependencies detected"
        echo ""
        echo "Repository is ready for the next phase of Laravel migration!"
        echo "Repositori siap untuk fase berikutnya dari migrasi Laravel!"